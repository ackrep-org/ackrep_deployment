version: "3"

services:
    ackrep-django:
        container_name: ackrep-django
        environment:
            - DJANGO_MANAGEPY_MIGRATE=on
            - USE_CELERY_BROKER_URL=True
            - USE_CELERY_RESULT_BACKEND=True
            - DATA_REPO_HOST_ADDRESS=$DATA_REPO_HOST_ADDRESS
            - HOST_UID=$HOST_UID
        build:
            context: ..
            dockerfile: ./ackrep_deployment/dockerfiles/ackrep_core/Dockerfile
        ports:
            - "8000:8000"
        labels:
            - 'traefik.enable=true'
            - 'traefik.http.routers.ackrep-django.rule=Host(`testing.ackrep.org`)'
            - 'traefik.http.routers.ackrep-django.tls=true'
            - 'traefik.http.routers.ackrep-django.tls.certresolver=lets-encrypt'
        volumes:
            - $DATA_REPO_HOST_ADDRESS:/code/ackrep_data
        depends_on:
            - traefik
            - celery_worker


    traefik:
        container_name: traefik
        image: traefik:2.1
        restart: always
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./traefik:/etc/traefik
            - /var/run/docker.sock:/var/run/docker.sock:ro


    redis:
        container_name: redis
        image: redis:6.2-alpine


    celery_worker:
        container_name: celery_worker
        environment:
            - DJANGO_MANAGEPY_MIGRATE=on
            - USE_CELERY_BROKER_URL=True
            - USE_CELERY_RESULT_BACKEND=True
            - DATA_REPO_HOST_ADDRESS=$DATA_REPO_HOST_ADDRESS
            - HOST_UID=$HOST_UID
        build: 
            context: ..
            dockerfile: ./ackrep_deployment/dockerfiles/ackrep_core/Dockerfile_celery
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - $DATA_REPO_HOST_ADDRESS:/code/ackrep_data
        depends_on:
            - redis


    default_environment:
        container_name: default_environment
        environment:
            - DJANGO_MANAGEPY_MIGRATE=on
        build:
            context: ..
            dockerfile: ./ackrep_deployment/dockerfiles/ackrep_core/Dockerfile_default_environment
        # volumes:
            # data repo is mounted by core.py on startup


    test_environment:
        container_name: test_environment
        build:
            context: ..
            dockerfile: ./ackrep_deployment/dockerfiles/ackrep_core/Dockerfile_test_environment
        # volumes:
            # data repo is mounted by core.py on startup