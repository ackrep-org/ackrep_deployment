FROM python:3.8-slim
ENV PYTHONUNBUFFERED=1

# Create a group and user to run our app
ARG APP_USER=appuser
RUN groupadd -r ${APP_USER} && useradd --no-log-init -r -g ${APP_USER} ${APP_USER}


RUN set -ex \
    && RUN_DEPS=" \
    mime-support \
    lsof \
    git \
    " \
    && seq 1 8 | xargs -I{} mkdir -p /usr/share/man/man{} \
    && apt-get update && apt-get install -y --no-install-recommends $RUN_DEPS \
    && rm -rf /var/lib/apt/lists/*

ADD ./ackrep_core/requirements.txt /requirements.txt
ADD ./ackrep_core/requirements_runner.txt /requirements_runner.txt

RUN set -ex \
    && BUILD_DEPS=" \
    build-essential \
    gfortran \
    libblas-dev \
    liblapack-dev \
    " \
    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \
    && pip install --no-cache-dir -r /requirements.txt \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
    && rm -rf /var/lib/apt/lists/*

RUN set -ex \
    && BUILD_DEPS=" \
    build-essential \
    gfortran \
    libblas-dev \
    liblapack-dev \
    " \
    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \
    && pip install --no-cache-dir -r /requirements_runner.txt \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
    && rm -rf /var/lib/apt/lists/*

# install midnight commander
RUN set -ex \
    && apt-get update\
    && apt-get install -y mc\
    && mkdir -p /home/appuser\
    && chown -R ${APP_USER}:${APP_USER} /home/appuser\
    && alias mc='EDITOR=mcedit mc'

# copy core
RUN mkdir -p /code/ackrep_core
ADD ./ackrep_core /code/ackrep_core
RUN chown -R ${APP_USER}:${APP_USER} /code

# copy data ut
RUN set -ex &&\
    cd code &&\
    git clone https://github.com/ackrep-org/ackrep_data.git &&\
    mv ackrep_data ackrep_data_for_unittests && \
    ls &&\
    chown -R ${APP_USER}:${APP_USER} /code/ackrep_data_for_unittests &&\
    cd ackrep_data_for_unittests &&\
    git checkout for_unittests
    
# copy data
RUN mkdir -p /code/ackrep_data
ADD ./ackrep_data /code/ackrep_data
RUN chown -R ${APP_USER}:${APP_USER} /code/ackrep_data

# install ackrep
WORKDIR /code/ackrep_core
RUN pip install -e .

# load the databases
RUN set -ex \
    && ackrep --bootstrap-db \
    && ackrep --bootstrap-test-db \
    && ackrep -l ../ackrep_data \
    && python manage.py test --keepdb --nocapture ackrep_web.test.test_web:TestCases2.load_db
RUN chown -R ${APP_USER}:${APP_USER} /code/ackrep_data_for_unittests

# prepare transfer folder
RUN mkdir -p /ackrep_transfer
RUN chown -R ${APP_USER}:${APP_USER} /ackrep_transfer

ADD ./ackrep_deployment/dockerfiles/ackrep_core/additional_files /code/

USER ${APP_USER}:${APP_USER}
EXPOSE 8000

# Uncomment after creating your docker-entrypoint.sh
ENTRYPOINT ["/code/docker-entrypoint_adapt.sh"]

# Start uWSGI
CMD ["bash"]